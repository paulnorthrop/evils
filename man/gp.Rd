% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generalisedPareto.R
\name{gp}
\alias{gp}
\alias{gpLoglik}
\title{Generalised Pareto functions}
\usage{
gpLoglik(pars, excesses, individual = FALSE, tol = 1e-04, epsilon = 1e-15)
}
\arguments{
\item{pars}{A numeric parameter vector of length 2 containing the respective
values of the GP scale
\ifelse{html}{\eqn{\sigma}\out{<sub>u</sub>}}{\eqn{\sigma_u}}
and shape \eqn{\xi} parameters.}

\item{excesses}{A numeric vector containing positive observations.
Typically, these are threshold excesses, that is, amounts by which
exceedances of a threshold exceed that threshold.}

\item{individual}{A logical scalar. Relevant to \code{gpLoglik} and
\code{gpScore}. If \code{individual = FALSE} then only the sum of
contributions from all observations in \code{excesses} is calculated.  If
\code{indidivdual = TRUE} then individual contributions from each
observation in \code{excesses} are calculated.}

\item{tol}{A positive numeric scalar.  Tolerance used to determine whether
to perform a calculation directly or via a series expansion approximation.
See \strong{Details}.}

\item{epsilon}{The desired error margin when an approximation is used.}
}
\value{
\strong{Log-likelihood} (\code{gpLoglik}). If
  \code{individual = FALSE} the value of the log-likelihood. If
  \code{individual = TRUE} a vector of length \code{length{excesses}}
  containing the contributions to the log-likelihood from each of the
  observations.

\strong{Score} (\code{gpScore}).  If \code{individual = FALSE} the value
 of the score, a vector of length 2 containing the derivative of the
 log-likelihood evaluated at the input parameter values.
 If \code{individual = TRUE} the values of the contributions to the score
 from each of the observations, a
  \code{length(excesses)}\eqn{ \times 2}{ x 2} matrix.
  The columns are named \code{sigma[u]} and \code{xi}.

\strong{Observed information} (\code{gpInfo}).  The observed information: a
  \eqn{2 \times 2}{2 x 2} matrix with row and column names
  \code{c(sigma[u], xi)}.
}
\description{
Calculate the log-likelihood function, score and observed information for
a random sample from a generalised Pareto (GP) distribution, including cases
where the shape parameter is very close to zero.
}
\details{
\strong{Log-likelihood} (\code{gpLoglik}). The problematic part of
  the log-likelihood is \ifelse{html}{log(1+z)/z}{\eqn{\log(1+z)/z}},
  where \ifelse{html}{z=\eqn{\xi}\eqn{y} / \eqn{\sigma}\out{<sub>u</sub>}}{
  \eqn{z} = \eqn{\xi}\eqn{y} / \eqn{\sigma_u}} and where \eqn{y} is a
  sample threshold excess.
  If \eqn{|z| \geq}{|z| >=} \code{tol} then this is calculated directly,
  using \code{log1p(z)/z}.
  If \eqn{|z| <} \code{tol} then we use \code{\link[sumR]{infiniteSum}}
  to approximate the series \ifelse{html}{log(1+z)/z}{\eqn{\log(1+z)/z}}
  \ifelse{html}{= 1 - z/2 + z\out{<sup>2</sup>}/3 - z\out{<sup>3</sup>}/4 +
  ...}{\eqn{= 1 - z/2 + z^2/3 - z^3/4 + \cdots}}. Before the call to
  \code{\link[sumR]{infiniteSum}} the input value of \code{epsilon}
  is adjusted to achieve the desired error margin for the approximation of
  the log-likelihood. If \code{z = 0} then
  \ifelse{html}{log(1+z)/z = 1}{\eqn{\log(1+z)/z} = 1}.
}
\examples{
### Simulate some data

set.seed(15042022)
y <- rGenPareto(100, 0, 1, 0)

### Log-likelihood

# Approximation using sumR::infinitesum()
gpLoglik(pars = c(1, 1e-8), excesses = y)
gpLoglik(pars = c(1, -1e-8), excesses = y)
gpLoglik(pars = c(1, 0), excesses = y)

# Direct calculation, involving (1 + 1 / xi) * log1p(xi * y / sigmau)
# Mostly fine, but breaks down eventually
gpLoglikDirect(pars = c(1, 1e-309), excesses = y)
gpLogikDirect(pars = c(1, -1e-309), excesses = y)
}
