% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gevDistribution.R
\name{gevDistribution}
\alias{gevDistribution}
\alias{dGEV}
\alias{pGEV}
\alias{qGEV}
\alias{rGEV}
\title{The Generalised Extreme Value distribution}
\usage{
dGEV(x, loc = 0, scale = 1, shape = 0, log = FALSE, ...)

pGEV(q, loc = 0, scale = 1, shape = 0, lower.tail = TRUE, log.p = FALSE, ...)

qGEV(
  p,
  loc = 0,
  scale = 1,
  shape = 0,
  lower.tail = TRUE,
  log.p = FALSE,
  eps = 1e-06
)

rGEV(n, loc = 0, scale = 1, shape = 0, eps = 1e-06)
}
\arguments{
\item{x, q}{A numeric vector of quantiles.}

\item{loc}{A numeric vector. Values of the GEV location parameter \eqn{\mu}.}

\item{scale}{A numeric vector of \strong{positive} values. Values of the
GEV scale parameter \eqn{\sigma}.}

\item{shape}{A numeric vector. Values of the GEV shape parameter \eqn{\xi}.}

\item{log, log.p}{A logical scalar. If \code{TRUE} then probabilities, or
probability density values, are given as \eqn{\log(p)}.}

\item{...}{Further arguments to be passed to \code{\link{log1pdx}}, which evaluates
terms of the form \eqn{\log(1+x)/x} in the GEV log-density and
log-distribution functions.}

\item{lower.tail}{A logical scalar. If \code{TRUE}, probabilities are
\eqn{P(X \leq x)}, otherwise, \eqn{P(X > x)}.}

\item{p}{A numeric vector of probabilities.}

\item{eps}{A numeric scalar. For values of \eqn{\xi} in \code{shape} that lie in
\verb{(-eps, eps)} an approximation to the GEV quantile function is used
instead of a direct calculation. See \strong{Details}.}

\item{n}{A numeric scalar. Number of observations. If
\code{length(n) > 1}, the length is taken to be the number required.}
}
\value{
\code{dGEV} gives the density function, \code{pGEV} gives the
distribution function, \code{qGEV} gives the quantile function,
and \code{rGEV} generates random deviates.

The length of the result is determined by \code{n} for \code{rgev},
and is the maximum of the lengths of the numerical arguments for the
other functions.

The numerical arguments other than \code{n} are recycled to the length
of the result.

If any element of \code{scale} is non-positive then an error is thrown.
}
\description{
Density, distribution function, quantile function and random generation for
the Generalised Extreme Value (GEV) distribution. Care is taken to avoid the
numerical problems that can occur when the shape parameter is very close to
zero.
}
\details{
The distribution function of a GEV distribution with parameters
\code{loc} = \eqn{\mu}, \code{scale} = \eqn{\sigma (> 0)} and
\code{shape} = \eqn{\xi} is
\deqn{F(x) = P(X \leq x) = \exp\left\{ -\left[ 1+\xi\left(\frac{x-\mu}{\sigma}\right)
  \right]_+^{-1/\xi} \right\},}
where \eqn{x_+ = \max(x, 0)}. If \eqn{\xi = 0} the distribution function is
defined as the limit as \eqn{\xi} tends to zero. The support of the
distribution depends on \eqn{\xi}: it is
\eqn{x \leq \mu - \sigma / \xi} for \eqn{\xi < 0};
\eqn{x \geq \mu - \sigma / \xi} for \eqn{\xi > 0};
and \eqn{x} is unbounded for \eqn{\xi = 0}.
Note that if \eqn{\xi < -1} the GEV density function becomes infinite
as \eqn{x} approaches \eqn{\mu -\sigma / \xi} from below.

If \code{lower.tail = TRUE} then if \code{p = 0} (\code{p = 1}) then
the lower (upper) limit of the distribution is returned, which is
\code{-Inf} or \code{Inf} in some cases.  Similarly, but reversed,
if \code{lower.tail = FALSE}.

In \code{dGEV} and \code{pGEV}, calculations are performed on a log-scale, which
involves the evaluation of \eqn{\log(1+z)/z}, where
\eqn{z = \xi (x - \mu) / \sigma}. Direct naive calculation using
\code{log(1+z)/z} is unstable for \code{z} close to \code{0}. Use of \code{\link{log1p(z)}}\verb{/z}
is much better, but cannot handle the cases where \code{x} is equal to \code{0} or is
extremely close to \code{0}. \code{dGEV} and \code{pGEV} avoid these issues using a series
approximation, implemented by \code{\link{log1pdx}}.

The GEV quantile function is \eqn{\mu - \sigma BC(-\log p, -\xi)}, where
\eqn{BC(x, \lambda) = (x^\lambda - 1)/\lambda} and \eqn{p} is the
probability of the required quantile. If \eqn{\lambda \in} \verb{(-eps,eps)} then
\eqn{BC(x, \lambda)} is approximated by
\eqn{\log x (1+\lambda \log x / 2 + (\lambda \log x)^2 / 6)}.
}
\examples{
# example code

}
