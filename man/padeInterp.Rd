% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/padeInterp.R
\name{padeInterp}
\alias{padeInterp}
\alias{predict.pade}
\title{Padé approximant coefficients for interpolation}
\usage{
padeInterp(L, M, A, f, xint)

\method{predict}{pade}(object, x)
}
\arguments{
\item{L}{An integer. Order of the Padé numerator.}

\item{M}{An integer. Order of the Padé denominator.}

\item{A}{A numeric vector of power series coefficients, starting at
\eqn{x^0}. Typically, these are the coefficients of a truncated Taylor
series of a function \eqn{f(x)} about some point.}

\item{f}{A function that returns the value of \eqn{f(x)}.}

\item{xint}{A numeric vector of length 2. The values of \eqn{x} between
which interpolation is required.}

\item{object}{An object of class \code{"pade"} returned from \code{padeInterp}.}

\item{x}{A numeric vector. Values at which to evaluate a Padé approximation
of \eqn{f(x)}.}
}
\value{
\code{padeInterp} returns an object (a list) a class \code{"pade"} with two
components:
\itemize{
\item \code{Px} Coefficients of the numerator polynomial, starting at \eqn{x^0}.
\item \code{Qx} Coefficients of the denominator polynomial, starting at \eqn{x^0}.
}

\code{predict.pade} returns a numeric vector of length \code{length(x)}.
}
\description{
Uses power series coefficients \eqn{\{a_n, n = 0, 1, ..., T\}} to calculate
Padé \eqn{[L/M]} approximant coefficients, with the option to use one extra
pair of coefficients to adjust the Padé approximation to interpolate between
two points.
}
\details{
If \code{f} is missing then this function behaves in the same way as
the function \code{Pade} in the \code{Pade} package.

If \code{f} is supplied then the Padé approximant is adjusted by adding a extra
pair of coefficient, one coefficient of \eqn{x^{L+1}} in the numerator and
one coefficient of \eqn{x^{M+1}} in the denominator, so that the
approximation recovers the values of \code{f(xint[1])} and \code{f(xint[2])}.
}
\examples{
## f(x) = log(1 + x) / x

# Orders of the Padé numerator and denominator.
L <- M <- 1
# Taylor series coefficients of expansion about x = 0, where f(0) = 1
j <- seq_len(L + M + 1) - 1
A <- (-1) ^ j / (j + 1)

# Pade approximation
p1 <- padeInterp(L, M, A)

# Pade approximation adjusted to interpolate over [-0.1, 0.1]
f <- function(x) log1p(x) / x
xint <- c(-0.1, 0.1)
p2 <- padeInterp(L, M, A, f, xint)

# Evaluate the approximations at xint and 0
xvals <- c(xint[1], 0, xint[2])
predict(p2, xvals)
# Check that p2 recovers the values of f at (xint[1], 0, xint[2])
f(xint)
# The standard approximation does not interpolate
predict(p1, xvals)
}
\references{
Adler A (2015). Pade: Padé Approximant Coefficients.
\doi{10.5281/zenodo.4270254} R package version 1.0.6,
\url{https://CRAN.R-project.org/package=Pade}.
}
\author{
Paul Northrop created this function by modifying the code in the
\code{Pade} function in the \code{Pade} package.
}
