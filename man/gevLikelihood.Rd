% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gevLikelihood.R
\name{gevLikelihood}
\alias{gevLikelihood}
\alias{gevLoglik}
\alias{gevScore}
\alias{gev1}
\alias{gev2}
\alias{gev3}
\alias{gevInfo}
\alias{gev11}
\alias{gev12}
\alias{gev22}
\alias{gev13}
\alias{gev23}
\alias{gev33}
\title{Generalised Extreme Value functions}
\usage{
gevLoglik(x, loc = 0, scale = 1, shape = 0, sum = FALSE, ...)

gevScore(x, loc = 0, scale = 1, shape = 0, sum = FALSE, ...)

gev1(x, loc, scale, shape)

gev2(x, loc, scale, shape)

gev3(x, loc, scale, shape)

gevInfo(x, loc = 0, scale = 1, shape = 0, sum = FALSE, ...)

gev11(x, loc, scale, shape)

gev12(x, loc, scale, shape)

gev22(x, loc, scale, shape)

gev13(x, loc, scale, shape)

gev23(x, loc, scale, shape)

gev33(x, loc, scale, shape)
}
\arguments{
\item{x}{A numeric vector of observations. Typically, these are
block maxima, that is, the largest observation in a block of contiguous
observations.}

\item{loc}{A numeric vector. Values of the GEV location parameter \eqn{\mu}.}

\item{scale}{A numeric vector of \strong{positive} values. Values of the
GEV scale parameter \eqn{\sigma}.}

\item{shape}{A numeric vector. Values of the GEV shape parameter \eqn{\xi}.}

\item{sum}{A logical scalar. Relevant to \code{gevLoglik} and \code{gevScore}. If
\code{sum = TRUE} then only the sum of contributions from all combinations of
observations in \code{x } and parameter values in \code{loc}, \code{scale} and \code{shape}
is calculated.  If \code{sum = FALSE} then these individual contributions are
summed to produce the result.}

\item{...}{Further arguments to be passed to \code{\link{log1pdx}} or \code{\link{dlog1pdx}}.
See \strong{Details}.}
}
\value{
For \code{gevLoglik} and \code{gevScore} the number \code{n}, say, of combinations of the
input parameters \code{x}, \code{loc}, \code{scale} and \code{shape} in the returned object is
the maximum of the lengths of these arguments, with these arguments being
recycled as necessary.

\strong{Log-likelihood} (\code{gevLoglik}). If \code{sum = FALSE} a vector of length \code{n}
containing individual log-likelihood contributions. If \code{sum = TRUE} a
scalar, the value of sum of these contributions.

\strong{Score} (\code{gevScore}). If \code{sum = FALSE} the values of the contributions
to the score, an \code{n}\eqn{ \times 3} matrix. The columns are named
\code{loc}, \code{scale} and \code{shape}. If \code{sum = TRUE}, a vector of length 3
containing the column sums of the matrix returned if \code{sum = FALSE}.

\strong{Observed information} (\code{gevInfo}).  If \code{sum = FALSE} the values of the
contributions to the observed information, an \code{n} \eqn{ \times 3 \times 3}
array. The second and third dimensions are named columns are named
\code{loc}, \code{scale} and \code{shape}. If \code{sum = TRUE}, a \eqn{3 \times 3} matrix
giving the observed information matrix, obtained by applying
\code{\link{colsums}} to the array returned if \code{sum = FALSE}.
}
\description{
Calculate the log-likelihood, score and observed information for
a random sample from a generalised extreme value (GEV) distribution,
including cases where the shape parameter is very close to zero.
}
\details{
\strong{Log-likelihood} (\code{gevLoglik}). The two problematic
terms of the log-likelihood both involve \eqn{\log(1+z)/z},
where \eqn{z = \xi (x - \mu)/ \sigma}. In one part this is exponentiated,
in the other it is not. The function \code{\link{log1pdx}} is used to calculate
\eqn{\log(1+z)/z}, with special case taken for cases where \code{z} is close to
zero.

\strong{Score} (\code{gevScore}). The first derivatives of the log-likelihood with
respect to \eqn{\mu} and \eqn{\sigma} both involve \eqn{\log(1+z)/z},
calculated using \code{\link{log1pdx}}. The first derivative of the log-likelihood
with respect to \eqn{\xi} involves \eqn{\log(1+z)/z} and also
\eqn{\log(1+z)/z^2 - z^{-1}(1+z)^{-1}}. The latter is calculated using
\code{\link{dlog1pdx}}.

The functions \code{gev1}, \code{gev2} and \code{gev3} are used in
\code{gevScore} to calculate the first derivatives of the GEV log-likelihood
\eqn{\ell} with respect to \eqn{\mu}, \eqn{\sigma} and \eqn{\xi}. \code{gevi} provides
\eqn{\partial \ell / \partial \theta_i}, where
\eqn{\theta = (\mu, \sigma, \xi)}. The input vectors
\code{x}, \code{loc}, \code{scale} and \code{shape} must have the same lengths and satisfy the
parameter constraints \eqn{\sigma > 0} and
\eqn{1 + \xi(x - \mu) / \sigma > 0}. These conditions are not checked
in \code{gev1}, \code{gev2} and \code{gev3}, so the user must take care when
calling these functions.

\strong{Observed information} (\code{gevObsInfo}). All the second derivatives of the
log-likelihood involve \eqn{\log(1+z)/z}, calculated using \code{\link{log1pdx}}.
Any second derivative made with respect to \eqn{\xi} also involves
\eqn{\log(1+z)/z^2 - z^{-1}(1+z)^{-1}}, which is calculated using
\code{\link{dlog1pdx}}. Differentiating the log-likelihood twice with respect to
\eqn{\xi} produces the function
\eqn{2 \log(1+z)/z^3 - 2 z^{-2}(1+z)^{-1} - z^{-1}(1+z)^{-2}}, which is
calculated using \code{\link{d2log1pdx}}.

The functions \code{gev11}, \code{gev12}, \code{gev13}, \code{gev22}, \code{gev23} and \code{gev33} are
used in \code{gevObsInfo} to calculate the second derivatives of the GEV
log-likelihood \eqn{\ell} with respect to \eqn{\mu}, \eqn{\sigma} and
\eqn{\xi}. \code{gevij} provides
\eqn{\partial^2 \ell / \partial \theta_i \theta_j}, where
\eqn{\theta = (\mu, \sigma, \xi)}. The input vectors \code{x}, \code{loc}, \code{scale}
and \code{shape} must have the same lengths and satisfy the parameter
constraints \eqn{\sigma > 0} and \eqn{1 + \xi(x - \mu) / \sigma > 0}.
These conditions are not checked in \code{gev11}, \code{gev12}, \code{gev13}, \code{gev22},
\code{gev23} and \code{gev33}, so the user must take care when calling these
functions.
}
\examples{
### Simulate some data

set.seed(17042022)
y <- rGenExtremeValue(100, 0, 1, 0)

### Log-likelihood

# Calculation using log1pdx()
gevLoglik(y, 0, 1, 1e-8, )
gevLoglik(y, 0, 1, -1e-8)
gevLoglik(y, 0, 1, 0)

# Direct calculation, involving (1 / xi) * log1p(xi * (y - mu) / sigma)
# Mostly fine, but breaks down eventually
gevLoglikDirect(pars = c(0, 1, 1e-309), maxima = y)
gevLoglikDirect(pars = c(0, 1, -1e-309), maxima = y)

# Score
set.seed(28122023)
x <- rGEV(10)
gevScore(x)
gevScore(x, sum = TRUE)
}
